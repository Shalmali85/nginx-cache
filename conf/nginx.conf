worker_processes auto; 

events { 
  
}

http {
    ############### PLATFORM ###############
    proxy_cache_path  cache  levels=1:2    keys_zone=STATIC:10m inactive=24h  max_size=20m;
	
	
   

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one 
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;
    #keepalive_timeout
    # reduce the data that needs to be sent over network -- for testing environment
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml;
    gzip_disable msie6;

    # allow the server to close connection on non responding client, this will free up memory
    #reset_timedout_connection on;

   
    server { 
        listen {{port}};
        access_log access.log; 
		
       location /notify/user {
            # Cache configuration
            #proxy_cache_key $host$uri$is_args$args;
	    rewrite /notify/user/(.*)/app /notify/user/$1/app break;
	    proxy_cache_key $host$uri$is_args$args;
	    proxy_http_version 1.1;
	    proxy_cache STATIC;
	    proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
	    proxy_pass       https://spring-cloud-test.cfapps.io;
	    proxy_cache_valid 200 1h;
			# Enables revalidation of expired cache items using conditional requests with the ?If-Modified-Since? and ?If-None-Match? header fields.
            #proxy_cache_revalidate on;
            # When enabled, only one request at a time will be allowed to populate a new cache element identified according to the proxy_cache_key.
            proxy_cache_lock on;
	    proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_404;
			# client certificates for upstream connection
            #proxy_ssl_certificate /home/vcap/app/public/certs/bds-cert.crt;
           # proxy_ssl_certificate_key /home/vcap/app/public/certs/bds-key.key;
            # reuse negotiated connection
            #proxy_ssl_session_reuse on;
            proxy_intercept_errors on;
            error_page 404  /404.html;
            error_page 504  /404.html;
            error_page 500  /500.html;
			

        }

       location /notify/ {
	   # rewrite /notify/ilts/(.*) /$1 break;
        proxy_pass  https://spring-cloud-test.cfapps.io;
		#add_header 'Access-Control-Allow-Origin' '*' ;
        #add_header 'Access-Control-Allow-Credentials' 'true';
        #add_header 'Access-Control-Allow-Headers' 'Content-Type,Accept';
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        proxy_intercept_errors on;
	error_page 404  /404.html;
	error_page 504  /404.html;
        error_page 500  /500.html;

        }
       
		
	   location /404.html{
         return 404 '{"error": {"status": 404,"message": "Requested Resource Not Found"}}';
      }
	  
	  location /500.html{
         return 500 '{"error": {"status": 500,"message": "Internal Server Error"}}';
      }
	  
	  location /504.html{
         return 504 '{"error": {"status": 504,"message": "Connection Timed Out"}}';
      }
       

        
    }
        
    }
}
